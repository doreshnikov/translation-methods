/**
This code is generated by [translate.codegen.VisitorInfoBuilder]
deriving from base class [translate.meta.visitors.MetaAttributedVisitorBase] generated by [translate.meta.visitors.MetaAttributedVisitorInfo]
*/

package gen.prefix

import java.io.File

import grammar.token.Token
import grammar.Expansion
import utils.Beautifier

import structure.ASTNode

class PrefixAttributedVisitorInfoData(val depth: Int) {
//	var view: String
//	val tab: String
//		get() = @macro.tab(depth)
}
    
class PrefixAttributedVisitorInfoTerminalNode<T : Token>(token: T, depth: Int) : 
    ASTNode.TerminalNode<T>(token) {
    val data = PrefixAttributedVisitorInfoData(depth)
}
    
class PrefixAttributedVisitorInfoInnerNode<T : Token>(token: T, expansion: Expansion, depth: Int) : 
    ASTNode.InnerNode<T>(token, expansion) {
    val data = PrefixAttributedVisitorInfoData(depth)    
}

fun main() {
    File("C:\\Users\\jetbrains\\IdeaProjects\\translation-methods\\src\\gen\\prefix\\${PrefixAttributedVisitorInfo.className}.kt").bufferedWriter().use { out ->
        out.write(PrefixAttributedVisitorInfo.getAll())
    }
}
